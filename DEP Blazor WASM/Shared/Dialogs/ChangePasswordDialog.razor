@inject IUserService UserService
@inject ISnackbar Snackbar
@inject CustomAuthStateProvider _authStateProvider;

<MudDialog Style="width:100%">
    <DialogContent>
        <EditForm Model="model" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />

            <MudTextField Label="Gammel Adgangskode" @bind-Value="model.OldPassword" InputType="InputType.Password" Class="mb-4 mx-4" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense" />
            <MudTextField Label="Ny Adgangskode" @bind-Value="model.NewPassword" InputType="InputType.Password" Class="mb-4 mx-4" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense" />
            <MudTextField Label="Gentag Ny Adgangskode" @bind-Value="model.NewPasswordCheck" InputType="InputType.Password" Class="mb-4 mx-4" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense" />

            <MudCardActions Class="justify-space-evenly">
                @if (@ShowCancelButton)
                {
                    <MudButton OnClick="Cancel" Color="Color.Surface" Variant="Variant.Filled">Annuller</MudButton>
                }
                <MudButton Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">Skift</MudButton>
            </MudCardActions>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public bool ShowCancelButton { get; set; } = true;

    private ChangePasswordRequest model = new();

    private async Task HandleSubmit()
    {
        if (model.NewPassword != model.NewPasswordCheck)
        {
            Snackbar.Add("Nye adgangskoder matcher ikke.", Severity.Warning);
            return;
        }

        var authState = await _authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var roleIdClaim = user.FindFirst(c => c.Type == "userId")?.Value;

        if (roleIdClaim == null || !int.TryParse(roleIdClaim, out int userId))
        {
            Snackbar.Add("Bruger ID kunne ikke findes.", Severity.Error);
            return;
        }

        model.UserId = userId;
        var response = await UserService.ChangePasswordAsync(model);

        if (response.Success)
        {
            Snackbar.Add(response.Message ?? "Password changed successfully.", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add(response.Message ?? "An unexpected error occurred.", Severity.Error);
        }
    }


    private void Cancel() => MudDialog.Cancel();
}
